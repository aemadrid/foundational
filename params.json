{"name":"Foundational","tagline":"Use Foundational to interface with with FoundationDB Ruby API in a more pleasant, rubyesque way. ","body":"_Use [Foundational](https://github.com/aemadrid/foundational) to interface with [FoundationDB](http://www.foundationdb.com/) [Ruby API](http://www.foundationdb.com/documentation/beta1/api-ruby.html) in a more pleasant, rubyesque way._\r\n\r\nIt features syntactic sugar to do the most common things you'll want to do. Plus it also includes example implementations of FoundationDB persisted array and hashes.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'foundational'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install foundational\r\n\r\n## Usage\r\n\r\n### Convenience Methods\r\n\r\nInstead of:\r\n\r\n```ruby\r\nrequire 'fdb'\r\nFDB.api_version 21\r\ndb = FDB.open\r\n```\r\n\t\r\nLet's do this:\r\n\r\n```ruby\r\nrequire 'foundational'\r\nFd.open\r\n```\r\n\t\r\nAnd then you can access the db from everywhere:\r\n\r\n```ruby\r\nFd.db.transact do |tr|\r\n  tr['a'] = 'A'\r\n  tr['b'] = 'B'\r\nend\r\n```\r\n\r\nSome tuples:\r\n\r\n```ruby\r\nFDB::Tuple.unpack(FDB::Tuple.pack([1, 2, 3]))\r\n# becomes\r\nFd.tuple_unpack(Fd.tuple_pack(1, 2, 3))\r\n# or even better\r\nFd.tu(Fd.tp(1, 2, 3))\r\n```\r\n\r\n### Persisted Array\r\n\r\nLet's say you want to turn your simple, one level Array into a FoundationDB persisted Array, then:\r\n\r\n```ruby\r\nary = Fd::Array.new 'simple_array'\r\nary << 1\r\nary << 'dos'\r\nary << [3]\r\n# some time later\r\nary = Fd::Array.new 'simple_array'\r\n# => [1, 'dos', [3]]\r\n```\r\n\r\n### Persisted Hash\r\n\r\nVery similar to what you can do with a FoundationDB persisted Hash:\r\n\r\n```ruby\r\nhsh = Fd::Hash.new 'simple_hash'\r\nhsh['a'] = 1\r\nhsh['b'] = 'dos'\r\nhsh['c'] = [3]\r\n# some time later\r\nhsh = Fd::Hash.new 'simple_hash'\r\n# => { 'a' => 1, 'b' => 'dos', 'c' => [3] }\r\n```\r\n\t\r\n### Conversion \r\nFoundationDB only saves basic values (strings) so we are using several serializers to choose from: [MessagePack](http://msgpack.org/) _(default, fastest)_, [JSON](https://github.com/intridea/multi_json) _(slow)_ and [YAML](http://ruby-doc.org/stdlib-1.9.3/libdoc/yaml/rdoc/YAML.html) _(slowest)_. Strings are left untouched though. You can choose your converter but be careful because some don't translate symbols or complex Ruby objects (MessagePack, JSON). As always, you need to choose between speed and features.\r\n\r\n### Sub-Keyspaces\r\nWe are enforcing sub-keyspaces (namespaces for your tuple keys) inside Foundational (['Fd'] is the default keyspace) so if you want another set of keyspaces just set it like so:\r\n\r\n```ruby\r\nFd.keyspace = %w{ Some Other Keyspace }\r\n```\r\n\r\n#### The End\r\nBe excellent to each other. Party on, dudes!\r\n\r\n---\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}